{"version":3,"sources":["fractals/fractal-tree/line.js","fractals/fractal-tree/circle.js","fractals/fractal-tree/tree-generator.js","App.js","fractals/utils.js","index.js"],"names":["Line","startpoint","length","angle","color","width","this","Math","cos","sin","ctx","save","lineWidth","strokeStyle","fillColor","x","y","endpoint","end_x","end_y","beginPath","moveTo","lineTo","stroke","restore","Circle","location","radius","fillStyle","arc","PI","fill","BASE_ANGLE","FractalTree","origin","baseLength","splitAngle","lineColor","flowerRadius","flowerColor","circleRadius","circleColor","lines","circles","depth","recurse","key","value","forEach","circle","line","createWithDepth","index","draw","startPoint","prevLen","newAngle","depthLeft","newLen","push","Canvas","prevProps","Object","keys","currProps","reduce","diff","getChangedProps","props","fractal","update","canvas","refs","canv","getContext","clearRect","height","flowerSize","className","ref","React","Component","InputSlider","Typography","id","gutterBottom","Slider","defaultValue","onChange","e","val","forceUpdate","aria-labelledby","step","marks","label","min","max","valueLabelDisplay","TextFieldProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f3ddc0.chunk.js","sourcesContent":["\r\nclass Line {\r\n    constructor(startpoint, length, angle, color, width) {\r\n        this.startpoint = startpoint;\r\n        this.length = +length;\r\n        this.angle = +angle;\r\n        this.width = width;\r\n        this.color = color;\r\n    }\r\n\r\n    get endpoint() {\r\n        return [this.startpoint[0] + this.length * Math.cos(this.angle),\r\n                this.startpoint[1] + this.length * Math.sin(this.angle)]\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save()\r\n\r\n        ctx.lineWidth = this.width\r\n        ctx.strokeStyle = this.color\r\n        ctx.fillColor = this.color\r\n        let [x, y] = this.startpoint\r\n        let [end_x, end_y] = this.endpoint\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y)\r\n        ctx.lineTo(end_x, end_y)\r\n        ctx.stroke()\r\n\r\n        ctx.restore()\r\n    }\r\n}\r\n\r\nexport default Line;","class Circle {\r\n    constructor(location, radius, color) {\r\n        this.location = location;\r\n        this.radius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save();\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = this.color;\r\n        ctx.fillStyle = this.color;\r\n        let [x,y] = this.location;\r\n        ctx.arc(x, y, this.radius, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        \r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nexport default Circle;","import Line from './line.js'\r\nimport Circle from './circle.js'\r\n\r\nconst LENGTH_DECAY_FACTOR = 0.9;\r\nconst LINE_WIDTH = 2;\r\nconst BASE_ANGLE = -Math.PI/2;\r\n\r\nclass FractalTree {\r\n    constructor(origin,baseLength, splitAngle, lineColor, flowerRadius, flowerColor) {\r\n        this.origin = origin;\r\n        this.baseLength = baseLength;\r\n        this.splitAngle = splitAngle;\r\n        this.lineColor = lineColor;\r\n        this.circleRadius = flowerRadius;\r\n        this.circleColor = flowerColor;\r\n        \r\n        this.lines = [];\r\n        this.circles = [];\r\n    }\r\n\r\n    createWithDepth(depth) {\r\n        this.lines = [];\r\n        this.circles = [];\r\n        this.depth = depth;\r\n        this.recurse(this.origin, this.baseLength, BASE_ANGLE, depth);\r\n    }\r\n\r\n    update(key, value) {\r\n        switch(key) {\r\n            case \"flowerSize\":\r\n                this.circleRadius = value\r\n                this.circles.forEach( circle => circle.radius = this.circleRadius);\r\n                break;\r\n            case \"flowerColor\":\r\n                this.circleColor = value\r\n                this.circles.forEach( circle => circle.color = this.circleColor);\r\n                break;\r\n            case \"lineColor\":\r\n                this.lineColor = value\r\n                this.lines.forEach( line => line.color = this.lineColor);\r\n                break;\r\n            case \"length\":\r\n                this.baseLength = value;\r\n                this.createWithDepth(this.depth);\r\n                break;\r\n            case \"depth\":\r\n                this.depth = value;\r\n                this.createWithDepth(this.depth);\r\n                break;\r\n            case \"angle\":\r\n                this.splitAngle = value;\r\n                this.createWithDepth(this.depth);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    draw(ctx) {\r\n        this.lines.forEach( function(line, index) { line.draw(ctx) } );\r\n        this.circles.forEach( function(circle, index) { circle.draw(ctx)} );\r\n    }\r\n\r\n    recurse(startPoint, prevLen, newAngle, depthLeft) {\r\n        let newLen = prevLen * LENGTH_DECAY_FACTOR;\r\n        let line = new Line(startPoint, newLen, newAngle, this.lineColor, LINE_WIDTH)\r\n        this.lines.push(line)\r\n        \r\n        if (depthLeft > 0) {\r\n            this.recurse(line.endpoint, newLen, newAngle - this.splitAngle/2, depthLeft - 1);\r\n            this.recurse(line.endpoint, newLen, newAngle + this.splitAngle/2, depthLeft - 1);\r\n        } else if (depthLeft === 0) { // last iteration, create circle\r\n            let circle = new Circle(line.endpoint, this.circleRadius, this.circleColor);\r\n            this.circles.push(circle);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FractalTree;","import React, { useRef, useEffect } from 'react'\nimport FractalTree from './fractals/fractal-tree/tree-generator'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport { render } from '@testing-library/react';\nimport ColorPicker from 'material-ui-color-picker'\nimport {getChangedProps} from './fractals/utils'\nimport './index.css'\n\n\nclass Canvas extends React.Component {\n\n  componentDidUpdate(prevProps) {\n    Object.keys(getChangedProps(prevProps, this.props)).forEach(\n      key => { this.fractal.update(key, this.props[key]) });\n    this.draw()\n  }\n\n  draw() {\n    const canvas = this.refs.canv\n    const ctx = canvas.getContext(\"2d\")\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.fractal.draw(ctx)\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canv\n    this.fractal = new FractalTree([canvas.width/2,canvas.height], this.props.length, this.props.angle,\n                    this.props.lineColor, this.props.flowerSize, this.props.flowerColor)\n    this.fractal.createWithDepth(this.props.depth)\n    this.draw()\n  }\n\n  render() {\n    return (\n      <div className=\"innerCanvas\" key={this.props.angle + this.props.depth + this.props.length +\n            this.props.flowerSize + this.props.flowerColor + this.props.lineColor}>\n        <canvas ref=\"canv\" className=\"actualCanvas\" width={2000} height={900}/>\n      </div>\n      )\n  }\n}\n\n\n\nclass InputSlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.angle = Math.PI/4;\n    this.depth = 8;\n    this.length = 130;\n    this.flowerSize=4;\n    this.flowerColor = '#faa046';\n    this.lineColor = '#00000';\n  }\n\n  render() {\n    return (\n    <div className={\"container\"}>\n    <div className={\"sliders\"}>\n      <div className={\"slider1\"}>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        Split angle\n      </Typography>\n      <Slider\n        defaultValue={Math.PI/4}\n        onChange={(e,val) => {this.angle = val; this.forceUpdate()} }\n        aria-labelledby=\"continuous-slider\"\n        step={Math.PI/1000}\n        marks={[{value:0, label: '0'},  {value:Math.PI/2, label: '90°'}, {value:Math.PI, label: '180°'}]}\n        min={0}\n        max={Math.PI}\n      />\n      </div>\n      <div className={\"slider2\"}>\n     <Typography id=\"discrete-slider\" gutterBottom>\n        Recursion depth\n      </Typography>\n      <Slider\n        defaultValue={8}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.depth = val; this.forceUpdate()} }\n        step={1}\n        //marks={[{value:0, label: '0'},  {value:5, label: '5'}, {value:10, label: '10'}, {value:15, label: '15'}]}\n        min={1}\n        max={15}\n      />\n      </div>\n      <div className={\"slider3\"}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Base length\n      </Typography>\n      <Slider\n        defaultValue={130}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.length = val; this.forceUpdate()} }\n        step={5}\n        //marks={[{value:50, label: '50'}, {value:200, label: '200'}, {value:400, label: '400'}]}\n        min={50}\n        max={400}\n      />\n      </div>\n      <div className={\"slider4\"}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Flower radius\n      </Typography>\n      <Slider\n        defaultValue={4}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.flowerSize = val; this.forceUpdate()} }\n        step={1}\n        marks\n        min={0}\n        max={20}\n      />\n      </div>\n      <div className={\"colorpicker1\"}>\n      <Typography id=\"colorpicker\" gutterBottom>\n        Flower color\n      </Typography>\n      <ColorPicker\n        defaultValue={this.flowerColor}\n        TextFieldProps={{ value: this.flowerColor }}\n        value={this.flowerColor}\n        onChange={(color) => {this.flowerColor = color; this.forceUpdate()}}\n      />\n      </div>\n      <div className={\"colorpicker2\"}>\n      <Typography id=\"colorpicker\" gutterBottom>\n        Line Color\n      </Typography>\n      <ColorPicker\n        defaultValue={this.lineColor}\n        TextFieldProps={{ value: this.lineColor }}\n        value={this.lineColor}\n        onChange={(color) => {this.lineColor = color; this.forceUpdate()}}\n      />\n      </div>\n    </div>\n    <div className=\"canvas\" >\n      <Canvas angle={this.angle} depth={this.depth} length={this.length}\n              flowerSize={this.flowerSize} flowerColor={this.flowerColor} lineColor={this.lineColor}>\n      </Canvas>\n    </div>\n    </div>)\n  }\n}\n\n\nexport default InputSlider","\r\nexport function getChangedProps(prevProps, currProps) {\r\n    let diff = Object.keys(prevProps).reduce((diff, key) => {\r\n        if (prevProps[key] === currProps[key]) return diff\r\n        return {\r\n          ...diff,\r\n          [key]: currProps[key]\r\n        }\r\n      }, {})\r\n    return diff;\r\n}","import { Input } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Canvas from './App';\nimport InputSlider from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <InputSlider />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}