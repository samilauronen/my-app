{"version":3,"sources":["assets/tree_transparent.png","assets/sierpinski_transparent.png","pages/homepage.js","fractals/utils.js","fractals/shapes/line.js","fractals/shapes/circle.js","fractals/fractal-tree/tree-generator.js","pages/fractals/fractal-tree-page.js","fractals/shapes/triangle.js","fractals/sierpinski-triangles/sierpinski-generator.js","pages/fractals/sierpinski-triangles-page.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","pageTitle","marginTop","spacing","backgroundColor","borderRadius","marginBottom","textAlign","fontSize","buttonContainer","backgroundImage","padding","containerTitle","horizontalLine","border","clear","width","height","linkbutton","marginRight","buttonText","GridLinkButton","classes","to","text","image","Grid","item","Button","className","variant","color","component","Link","container","direction","justify","insideButtonGrid","src","Home","treeImage","sierpinskiImage","getChangedProps","prevProps","currProps","Object","keys","reduce","diff","key","Line","startpoint","length","angle","this","Math","cos","sin","ctx","save","lineWidth","strokeStyle","fillColor","x","y","endpoint","end_x","end_y","beginPath","moveTo","lineTo","stroke","restore","Circle","location","radius","fillStyle","arc","PI","fill","BASE_ANGLE","FractalTree","origin","baseLength","splitAngle","lineColor","flowerRadius","flowerColor","circleRadius","circleColor","lines","circles","depth","recurse","value","forEach","circle","line","createWithDepth","index","draw","startPoint","prevLen","newAngle","depthLeft","newLen","push","Canvas","props","fractal","update","canvas","refs","canv","getContext","clearRect","flowerSize","ref","React","Component","FractalTreeComponent","state","Typography","Slider","defaultValue","onChange","e","val","setState","aria-labelledby","step","marks","label","min","max","valueLabelDisplay","TextFieldProps","Triangle","rotation","rotationPoint","sideLength","cornerPoints","assert","equal","centerX","centerY","centerPoint","sqrt","cx","cy","leftCornerX","leftCornerY","baseToCenterDist","rightCornerX","rightCornerY","topCornerX","topCornerY","baseToTopDist","x0","y0","x1","y1","x2","y2","rx","ry","translate","rotate","SierpinskiTriangles","baseCenterpoint","rotationAngle","triangles","baseTriangle","fromCenterPoint","center","removalTriangle","lcx","lcy","rcx","rcy","tcx","tcy","tr","SierpinskiTrianglesComponent","Main","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8011b46b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tree_transparent.217355f2.png\";","export default __webpack_public_path__ + \"static/media/sierpinski_transparent.9ad06ee0.png\";","import React from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper'\nimport { Router } from 'react-router';\nimport { borderRadius, fontSize, fontStyle } from '@material-ui/system';\n\nimport treeImage from '../assets/tree_transparent.png'\nimport sierpinskiImage from '../assets/sierpinski_transparent.png'\n\nconst useStyles = makeStyles((theme) => ({\n    pageTitle: {\n        marginTop: theme.spacing(2),\n        backgroundColor: \"#a5b9d9\",\n        borderRadius: 50,\n        marginBottom: theme.spacing(5),\n        textAlign: \"center\",\n        fontSize: \"500%\"\n    },\n    buttonContainer: {\n        backgroundColor: \"#c2d8fc\",\n        backgroundImage: \"linear-gradient(90deg, #c2d8fc, white)\",\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(5),\n        borderRadius: 15,\n        fontSize: 30\n    },\n    containerTitle: {\n        marginBottom: theme.spacing(0),\n        marginTop: theme.spacing(0),\n        fontSize: \"200%\"\n    },\n    horizontalLine: {\n        border: 0,\n        clear:\"both\",\n        width: \"100%\",               \n        backgroundImage: \"linear-gradient(90deg, blue, white)\",\n        height: \"2px\",\n        marginBottom: theme.spacing(4)\n    },\n    linkbutton: {\n        padding: theme.spacing(4),\n        marginRight: theme.spacing(15),\n        textAlign: \"center\",\n        borderRadius: 50,\n        fontSize: 20\n    },\n    buttonText: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nfunction GridLinkButton({classes, to, text, image}) {\n    return (\n        <Grid item>\n            <Button\n                className={classes.linkbutton}\n                variant=\"contained\"\n                color=\"primary\"\n                component={Link}\n                to={to}\n            >\n                <Grid container direction=\"column\" justify=\"flex-start\" className={classes.insideButtonGrid}>\n                    <img src={image}/>\n                    <div className={classes.buttonText}>{text}</div>\n                </Grid>\n            </Button>\n        </Grid>\n    )\n}\n\nconst Home = () => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <h1 className={classes.pageTitle}> Fractal Playground </h1>\n            \n            <Grid container direction=\"column\" className={classes.buttonContainer} >\n                <Grid item> <h2 className={classes.containerTitle}> 2D Fractals </h2> </Grid>\n                <hr className={classes.horizontalLine}/>\n                <Grid item> <Grid container direction=\"row\">\n                    <GridLinkButton classes={classes} image={treeImage} text=\"Fractal Tree\" to=\"fractal-playground/tree\"  />\n                    <GridLinkButton classes={classes} image={sierpinskiImage} text=\"Sierpinski Triangles\" to=\"/fractal-playground/sierpinski\" />\n                    <GridLinkButton classes={classes} text=\"Mandelbrot Set\" to=\"/mandelbrot\" />\n                    <GridLinkButton classes={classes} text=\"L-Systems\" to=\"/lsystems\" />\n                </Grid> </Grid>\n            </Grid>\n\n            <Grid container direction=\"column\" className={classes.buttonContainer} >\n                <Grid item> <h2 className={classes.containerTitle}> 3D Fractals </h2> </Grid>\n                <hr className={classes.horizontalLine}/>\n                <Grid item> <Grid container direction=\"row\">\n                    <GridLinkButton classes={classes} text=\"Mandelbrot 3D\" to=\"/tree\"  />\n                    <GridLinkButton classes={classes} text=\"Dummy\" to=\"/sierpinski\" />\n                    <GridLinkButton classes={classes} text=\"TBD Set\" to=\"/mandelbrot\" />\n                    <GridLinkButton classes={classes} text=\"Something\" to=\"/lsystems\" />\n                </Grid> </Grid>\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default Home\n","\nexport function getChangedProps(prevProps, currProps) {\n    let diff = Object.keys(prevProps).reduce((diff, key) => {\n        if (prevProps[key] === currProps[key]) return diff\n        return {\n          ...diff,\n          [key]: currProps[key]\n        }\n      }, {})\n    return diff;\n}","\nclass Line {\n    constructor(startpoint, length, angle, color, width) {\n        this.startpoint = startpoint;\n        this.length = +length;\n        this.angle = +angle;\n        this.width = width;\n        this.color = color;\n    }\n\n    get endpoint() {\n        return [this.startpoint[0] + this.length * Math.cos(this.angle),\n                this.startpoint[1] + this.length * Math.sin(this.angle)]\n    }\n\n    draw(ctx) {\n        ctx.save()\n\n        ctx.lineWidth = this.width\n        ctx.strokeStyle = this.color\n        ctx.fillColor = this.color\n        let [x, y] = this.startpoint\n        let [end_x, end_y] = this.endpoint\n\n        ctx.beginPath();\n        ctx.moveTo(x, y)\n        ctx.lineTo(end_x, end_y)\n        ctx.stroke()\n\n        ctx.restore()\n    }\n}\n\nexport default Line;","class Circle {\n    constructor(location, radius, color) {\n        this.location = location;\n        this.radius = radius;\n        this.color = color;\n    }\n\n    draw(ctx) {\n        ctx.save();\n\n        ctx.beginPath();\n        ctx.strokeStyle = this.color;\n        ctx.fillStyle = this.color;\n        let [x,y] = this.location;\n        ctx.arc(x, y, this.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        \n        ctx.restore();\n    }\n}\n\nexport default Circle;","import Line from '../shapes/line.js'\nimport Circle from '../shapes/circle.js'\n\nconst LENGTH_DECAY_FACTOR = 0.9;\nconst LINE_WIDTH = 2;\nconst BASE_ANGLE = -Math.PI/2;\n\nclass FractalTree {\n    constructor(origin,baseLength, splitAngle, lineColor, flowerRadius, flowerColor) {\n        this.origin = origin;\n        this.baseLength = baseLength;\n        this.splitAngle = splitAngle;\n        this.lineColor = lineColor;\n        this.circleRadius = flowerRadius;\n        this.circleColor = flowerColor;\n        \n        this.lines = [];\n        this.circles = [];\n    }\n\n    createWithDepth(depth) {\n        this.lines = [];\n        this.circles = [];\n        this.depth = depth;\n        this.recurse(this.origin, this.baseLength, BASE_ANGLE, depth);\n    }\n\n    update(key, value) {\n        switch(key) {\n            case \"flowerSize\":\n                this.circleRadius = value\n                this.circles.forEach( circle => circle.radius = this.circleRadius );\n                break;\n            case \"flowerColor\":\n                this.circleColor = value\n                this.circles.forEach( circle => circle.color = this.circleColor );\n                break;\n            case \"lineColor\":\n                this.lineColor = value\n                this.lines.forEach( line => line.color = this.lineColor );\n                break;\n            case \"length\":\n                this.baseLength = value;\n                this.createWithDepth(this.depth);\n                break;\n            case \"depth\":\n                this.depth = value;\n                this.createWithDepth(this.depth);\n                break;\n            case \"angle\":\n                this.splitAngle = value;\n                this.createWithDepth(this.depth);\n                break;\n            default:\n        }\n    }\n\n    draw(ctx) {\n        this.lines.forEach( function(line, index) { line.draw(ctx) } );\n        this.circles.forEach( function(circle, index) { circle.draw(ctx)} );\n    }\n\n    recurse(startPoint, prevLen, newAngle, depthLeft) {\n        let newLen = prevLen * LENGTH_DECAY_FACTOR;\n        let line = new Line(startPoint, newLen, newAngle, this.lineColor, LINE_WIDTH)\n        this.lines.push(line)\n        \n        if (depthLeft > 0) {\n            this.recurse(line.endpoint, newLen, newAngle - this.splitAngle/2, depthLeft - 1);\n            this.recurse(line.endpoint, newLen, newAngle + this.splitAngle/2, depthLeft - 1);\n        } else if (depthLeft === 0) { // last iteration, create circle\n            let circle = new Circle(line.endpoint, this.circleRadius, this.circleColor);\n            this.circles.push(circle);\n        }\n    }\n}\n\nexport default FractalTree;","import React, { useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport { render } from '@testing-library/react';\nimport ColorPicker from 'material-ui-color-picker'\n\nimport {getChangedProps} from '../../fractals/utils'\nimport FractalTree from '../../fractals/fractal-tree/tree-generator'\n\nimport './fractal-tree-page.css'\n\n\nclass Canvas extends React.Component {\n\n  componentDidUpdate(prevProps) {\n    Object.keys(getChangedProps(prevProps, this.props)).forEach(\n      key => { this.fractal.update(key, this.props[key]) });\n    this.draw();\n  }\n\n  draw() {\n    const canvas = this.refs.canv;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.fractal.draw(ctx);\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canv;\n    this.fractal = new FractalTree([canvas.width/2,canvas.height], this.props.length, this.props.angle,\n                    this.props.lineColor, this.props.flowerSize, this.props.flowerColor);\n    this.fractal.createWithDepth(this.props.depth);\n    this.draw()\n  }\n\n  render() {\n    return (\n      <div className=\"innerCanvas\" key={this.props.angle + this.props.depth + this.props.length +\n            this.props.flowerSize + this.props.flowerColor + this.props.lineColor}>\n        <canvas ref=\"canv\" className=\"actualCanvas\" width={2000} height={900}/>\n      </div>\n      )\n  }\n}\n\nclass FractalTreeComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // default values for adjustment parameters\n    this.state = {\n      angle: Math.PI/4,\n      depth: 8,\n      length: 130,\n      flowerSize: 4,\n      flowerColor: '#faa046',\n      lineColor: '#00000'\n    };\n  }\n\n  render() {\n    return (\n    <div className={\"container\"}>\n      <div className={\"sliders\"}>\n        <div className={\"slider1\"}>\n          <Typography>\n            Rotation angle\n          </Typography>\n          <Slider\n            defaultValue={this.state.angle}\n            onChange={(e,val) => this.setState({angle: val})}\n            aria-labelledby=\"continuous-slider\"\n            step={Math.PI/1000}\n            marks={[{value:0, label: '0'},  {value:Math.PI/2, label: '90°'}, {value:Math.PI, label: '180°'}]}\n            min={0}\n            max={Math.PI}\n          />\n        </div>\n        <div className={\"slider2\"}>\n          <Typography>\n            Recursion depth\n          </Typography>\n          <Slider\n            defaultValue={this.state.depth}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            onChange={(e,val) => this.setState({depth: val})}\n            step={1}\n            //marks={[{value:0, label: '0'},  {value:5, label: '5'}, {value:10, label: '10'}, {value:15, label: '15'}]}\n            min={1}\n            max={15}\n          />\n        </div>\n        <div className={\"slider3\"}>\n          <Typography>\n            Base length\n          </Typography>\n          <Slider\n            defaultValue={this.state.length}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            onChange={(e,val) => this.setState({length: val})}\n            step={5}\n            //marks={[{value:50, label: '50'}, {value:200, label: '200'}, {value:400, label: '400'}]}\n            min={50}\n            max={400}\n          />\n        </div>\n        <div className={\"slider4\"}>\n          <Typography>\n            Flower radius\n          </Typography>\n          <Slider\n            defaultValue={this.state.flowerSize}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            onChange={(e,val) => this.setState({flowerSize: val})}\n            step={1}\n            marks\n            min={0}\n            max={20}\n          />\n        </div>\n        <div className={\"colorpicker1\"}>\n          <Typography>\n            Flower color\n          </Typography>\n          <ColorPicker\n            defaultValue={this.state.flowerColor}\n            TextFieldProps={{ value: this.state.flowerColor }}\n            value={this.state.flowerColor}\n            onChange={(color) => this.setState({flowerColor: color})}\n          />\n        </div>\n        <div className={\"colorpicker2\"}>\n          <Typography>\n            Line Color\n          </Typography>\n          <ColorPicker\n            defaultValue={this.state.lineColor}\n            TextFieldProps={{ value: this.state.lineColor }}\n            value={this.state.lineColor}\n            onChange={(color) => this.setState({lineColor: color})}\n          />\n        </div>\n      </div>\n      <div className=\"canvas\" >\n        <Canvas angle={this.state.angle} depth={this.state.depth} length={this.state.length}\n                flowerSize={this.state.flowerSize} flowerColor={this.state.flowerColor} lineColor={this.state.lineColor}>\n        </Canvas>\n      </div>\n    </div>)\n  }\n}\n\n\nexport default FractalTreeComponent","import { strict as assert} from 'assert';\n\nclass Triangle {\n\n    constructor(color) {\n        this.color = color;\n        this.rotation = 0;\n        this.rotationPoint = [0,0];\n        this.sideLength = 0;\n    }\n\n    // note: does not assing sideLength since can be non-equilateral\n    fromCornerPoints(cornerPoints) {\n        assert.equal(cornerPoints.length, 3, \"Triangles should have three corners\");\n        this.cornerPoints = cornerPoints;\n        let centerX = (cornerPoints[0][0] + cornerPoints[1][0] + cornerPoints[2][0]) / 3;\n        let centerY = (cornerPoints[0][1] + cornerPoints[1][1] + cornerPoints[2][1]) / 3;\n        this.centerPoint = [centerX, centerY];\n        return this;\n    }\n\n    get baseToCenterDist() {\n        return this.sideLength * Math.sqrt(3) / 6\n    }\n\n    get baseToTopDist() {\n        return this.sideLength * Math.sqrt(3) / 2\n    }\n\n    // assuming equilateral\n    fromCenterPoint(centerPoint, sideLength) {\n        const [cx, cy] = centerPoint;\n        this.sideLength = sideLength;\n\n        const leftCornerX = cx - sideLength/2;\n        const leftCornerY = cy + this.baseToCenterDist;\n\n        const rightCornerX = cx + sideLength/2;\n        const rightCornerY = leftCornerY;\n\n        const topCornerX = cx;\n        const topCornerY = rightCornerY - this.baseToTopDist;\n\n        this.centerPoint = centerPoint;\n        this.rotationPoint = centerPoint;\n        this.cornerPoints = [[leftCornerX, leftCornerY], [rightCornerX, rightCornerY], [topCornerX, topCornerY]]\n\n        return this;\n    }\n\n    draw(ctx) {\n        ctx.save()\n\n        ctx.fillStyle = this.color\n\n        const [x0, y0] = this.cornerPoints[0];\n        const [x1, y1] = this.cornerPoints[1];\n        const [x2, y2] = this.cornerPoints[2];\n        const [rx, ry] = this.rotationPoint;\n\n        // rotate around center\n        ctx.translate(rx, ry);\n        ctx.rotate(this.rotation);\n        ctx.translate(-rx, -ry);\n\n        // draw triangle\n        ctx.beginPath();\n        ctx.moveTo(x0, y0);\n        ctx.lineTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.fill()\n        \n        ctx.restore()\n    }\n}\n\nexport default Triangle","import Triangle from \"../shapes/triangle\";\n\nclass SierpinskiTriangles {\n\n    constructor(baseCenterpoint, baseLength, rotationAngle) {\n        this.baseLength = baseLength;\n        this.baseCenterpoint = baseCenterpoint;\n        this.rotationAngle = rotationAngle;\n        this.triangles = [];\n    }\n\n    update(key, value) {\n        switch(key) {\n            case \"length\":\n                this.baseLength = value;\n                break;\n            case \"angle\":\n                this.rotationAngle = value;\n                break;\n            case \"depth\":\n                this.depth = value;\n                break;\n            default:\n        }\n        this.createWithDepth(this.depth);\n    }\n\n    createWithDepth(depth) {\n        this.triangles = [];\n\n        const baseTriangle = new Triangle(\"#000000\").fromCenterPoint(this.baseCenterpoint, this.baseLength);\n        baseTriangle.rotation = this.rotationAngle;\n\n        this.triangles.push(baseTriangle);\n        this.recurse(this.baseCenterpoint, this.baseLength, depth);\n    }\n\n    recurse(center, sideLength, depthLeft) {\n\n        if (depthLeft === 0) return;\n\n        const color = \"#FFFFFF\"\n        const removalTriangle = new Triangle(color).fromCenterPoint(center, sideLength/2);\n        removalTriangle.rotation = this.rotationAngle + Math.PI;\n        this.triangles.push(removalTriangle);\n\n        let lcx = center[0] - sideLength/4;\n        let lcy = center[1] + sideLength * Math.sqrt(3) / 12;\n\n        let rcx = center[0] + sideLength/4;\n        let rcy = lcy;\n\n        let tcx = center[0];\n        let tcy = center[1] - sideLength * Math.sqrt(3) / 6;\n\n        this.recurse([lcx, lcy], sideLength/2, depthLeft - 1);\n        this.recurse([rcx, rcy], sideLength/2, depthLeft - 1);\n        this.recurse([tcx, tcy], sideLength/2, depthLeft - 1);\n    }\n\n    draw(ctx) {\n        this.triangles.forEach( tr => tr.draw(ctx) );\n    }\n}\n\nexport default SierpinskiTriangles;","import React, { useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport { render } from '@testing-library/react';\nimport ColorPicker from 'material-ui-color-picker'\n\nimport {getChangedProps} from '../../fractals/utils'\nimport SierpinskiTriangles from '../../fractals/sierpinski-triangles/sierpinski-generator';\n\nimport './fractal-tree-page.css'\n\n\nclass Canvas extends React.Component {\n\n  componentDidUpdate(prevProps) {\n    Object.keys(getChangedProps(prevProps, this.props)).forEach(\n     key => { this.fractal.update(key, this.props[key]) });\n    this.draw();\n  }\n\n  draw() {\n    const canvas = this.refs.canv;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.fractal.draw(ctx);\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canv;\n    this.fractal = new SierpinskiTriangles([canvas.width/2,canvas.height/2], this.props.length, this.props.angle)\n    this.fractal.createWithDepth(this.props.depth);\n    this.draw()\n  }\n\n  render() {\n    return (\n      <div className=\"innerCanvas\" key={this.props.depth + this.props.length + this.props.angle}>\n        <canvas ref=\"canv\" className=\"actualCanvas\" width={2000} height={900}/>\n      </div>\n      )\n  }\n}\n\nclass SierpinskiTrianglesComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // default values for adjustment parameters\n    this.state = {\n      depth: 2,\n      length: 700,\n      angle: 0\n    };\n  }\n\n  render() {\n    return (\n    <div className={\"container\"}>\n      <div className={\"sliders\"}>\n        <div className={\"slider1\"}>\n          <Typography>\n            Rotation angle\n          </Typography>\n          <Slider\n            defaultValue={this.state.angle}\n            onChange={(e,val) => this.setState({angle: val})}\n            aria-labelledby=\"continuous-slider\"\n            step={Math.PI/1000}\n            marks={[{value:0, label: '0'},  {value:Math.PI, label: '180°'}, {value:Math.PI*2, label: '360°'}]}\n            min={0}\n            max={Math.PI*2}\n          />\n        </div>\n        <div className={\"slider2\"}>\n          <Typography>\n            Recursion depth\n          </Typography>\n          <Slider\n            defaultValue={this.state.depth}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            onChange={(e,val) => this.setState({depth: val})}\n            step={1}\n            //marks={[{value:0, label: '0'},  {value:5, label: '5'}, {value:10, label: '10'}, {value:15, label: '15'}]}\n            min={0}\n            max={9}\n          />\n        </div>\n        <div className={\"slider3\"}>\n          <Typography>\n            Base length\n          </Typography>\n          <Slider\n            defaultValue={this.state.length}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            onChange={(e,val) => this.setState({length: val})}\n            step={5}\n            //marks={[{value:50, label: '50'}, {value:200, label: '200'}, {value:400, label: '400'}]}\n            min={200}\n            max={2000}\n          />\n        </div>\n      </div>\n      <div className=\"canvas\" >\n        <Canvas depth={this.state.depth} length={this.state.length} angle={this.state.angle}>\n        </Canvas>\n      </div>\n    </div>)\n  }\n}\n\n\nexport default SierpinskiTrianglesComponent","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/homepage';\nimport FractalTreeComponent from './pages/fractals/fractal-tree-page';\nimport SierpinskiTrianglesComponent from './pages/fractals/sierpinski-triangles-page';\n\nconst Main = () => {\n  return (\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n      <Route exact path='/fractal-playground' component={Home} />\n      <Route exact path='/fractal-playground/tree' component={FractalTreeComponent} />\n      <Route exact path='/fractal-playground/sierpinski' component={SierpinskiTrianglesComponent} />\n    </Switch>\n  );\n}\n\nexport default Main;","import { Input } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom'\nimport Main from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}