{"version":3,"sources":["Fractals/Vector.js","Fractals/FractalGenerator.js","App.js","index.js"],"names":["Vector","startpoint","length","angle","color","width","flowerEnabled","flowerSize","flowerColor","this","Number","Math","cos","sin","ctx","save","lineWidth","strokeStyle","fillColor","x","y","endpoint","end_x","end_y","beginPath","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","restore","FractalTree","origin","baseAngle","baseLength","splitAngle","lenDecayFactor","lineColor","vectors","depth","recurse","forEach","vec","index","draw","startPoint","prevLen","nextAngle","depthLeft","newLen","push","Canvas","canvas","refs","canv","getContext","image","height","props","drawToDepth","className","ref","React","Component","InputSlider","Typography","id","gutterBottom","Slider","defaultValue","onChange","e","val","forceUpdate","aria-labelledby","step","marks","value","label","min","max","valueLabelDisplay","TextFieldProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f789c260.chunk.js","sourcesContent":["class Vector {\r\n    constructor(startpoint, length, angle, color, width, flowerEnabled, flowerSize, flowerColor) {\r\n        this.startpoint = startpoint\r\n        this.length = Number(length)\r\n        this.angle = Number(angle)\r\n        this.color = color\r\n        this.width = width\r\n        this.flowerEnabled = flowerEnabled\r\n        this.flowerSize = flowerSize\r\n        this.flowerColor = flowerColor\r\n    }\r\n\r\n    get endpoint() {\r\n        return [this.startpoint[0] + this.length * Math.cos(this.angle),\r\n                this.startpoint[1] + this.length * Math.sin(this.angle)]\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save()\r\n\r\n        ctx.lineWidth = this.width\r\n        ctx.strokeStyle = this.color\r\n        ctx.fillColor = this.color\r\n\r\n        let [x, y] = this.startpoint\r\n        let [end_x, end_y] = this.endpoint\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y)\r\n        ctx.lineTo(end_x, end_y)\r\n        ctx.stroke()\r\n        if(this.flowerEnabled) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = 1\r\n            ctx.strokeStyle = this.color\r\n            ctx.fillStyle = this.flowerColor\r\n            ctx.arc(end_x, end_y, this.flowerSize, 0, 2 * Math.PI)\r\n            ctx.fill()\r\n        }\r\n        \r\n\r\n        ctx.restore()\r\n    }\r\n}\r\n\r\nexport default Vector;","import Vector from './Vector.js'\r\n\r\nclass FractalTree {\r\n    constructor(origin, baseAngle, baseLength, splitAngle, lenDecayFactor, lineColor, flowerEnabled, flowerSize, flowerColor) {\r\n        this.origin = origin\r\n        this.baseAngle = baseAngle\r\n        this.baseLength = baseLength\r\n        this.splitAngle = splitAngle\r\n        this.lenDecayFactor = lenDecayFactor\r\n        this.flowerEnabled = flowerEnabled\r\n        this.flowerSize = flowerSize\r\n        this.flowerColor = flowerColor\r\n        this.lineColor = lineColor\r\n        this.vectors = []\r\n    }\r\n\r\n    drawToDepth(depth, ctx) {\r\n        this.recurse(this.origin, this.baseLength, this.baseAngle, depth, ctx)\r\n        this.vectors.forEach( function(vec, index) {vec.draw(ctx)})\r\n    }\r\n\r\n    recurse(startPoint, prevLen, nextAngle, depthLeft) {\r\n        let newLen = prevLen * this.lenDecayFactor\r\n        let vec = new Vector(startPoint, newLen, nextAngle, this.lineColor, 2, depthLeft === 0,\r\n            this.flowerSize, this.flowerColor)\r\n        this.vectors.push(vec)\r\n        \r\n        if (depthLeft > 0) {\r\n            this.recurse(vec.endpoint, newLen, nextAngle - this.splitAngle/2, depthLeft - 1)\r\n            this.recurse(vec.endpoint, newLen, nextAngle + this.splitAngle/2, depthLeft - 1)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet tree = null;\r\n\r\nexport function generateFractalTree(origin, baseAngle, baseLength, splitAngle, lenDecayFactor,\r\n    lineColor, flowerSize, flowerColor) {\r\n\r\n    tree = new FractalTree(origin, baseAngle, baseLength, splitAngle, lenDecayFactor,\r\n        lineColor, true, flowerSize, flowerColor)\r\n    return tree;\r\n}\r\n\r\nexport function setSplitAngle(newValue) {\r\n    tree.splitAngle = newValue\r\n}\r\n\r\nexport function setLineColor(newColor) {\r\n    tree.lineColor = newColor\r\n}\r\n\r\nexport function setFlowerSize(newSize) {\r\n    tree.flowerSize = newSize\r\n}\r\n\r\nexport function setFlowerColor(newColor) {\r\n    tree.flowerColor = newColor\r\n}","import React, { useRef, useEffect } from 'react'\nimport {generateFractalTree, setSplitAngle} from './Fractals/FractalGenerator'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport { render } from '@testing-library/react';\nimport ColorPicker from 'material-ui-color-picker'\nimport './index.css'\n\nconst sliderMargin = {\n  top: '10%'\n}\n\nclass Canvas extends React.Component {\n\n  componentDidUpdate() {\n    this.draw()\n  }\n\n  draw() {\n    const canvas = this.refs.canv\n    const ctx = canvas.getContext(\"2d\")\n    const img = this.refs.image\n\n    let fractal = generateFractalTree([canvas.width/2,canvas.height], -Math.PI/2,\n      this.props.length, this.props.angle, 0.9,\n      this.props.lineColor, this.props.flowerSize, this.props.flowerColor)\n    fractal.drawToDepth(this.props.depth, ctx)\n  }\n\n  componentDidMount() {\n    this.draw()\n  }\n\n  render() {\n    return (\n      <div className=\"innerCanvas\" key={this.props.angle + this.props.depth + this.props.length +\n            this.props.flowerSize + this.props.flowerColor + this.props.lineColor}>\n        <canvas ref=\"canv\" className=\"actualCanvas\" width={2000} height={900}/>\n      </div>\n      )\n  }\n}\n\n\n\nclass InputSlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.angle = Math.PI/4;\n    this.depth = 8;\n    this.length = 130;\n    this.flowerSize=4;\n    this.flowerColor = '#faa046';\n    this.lineColor = '#00000';\n  }\n\n  render() {\n    return (\n    <div className={\"container\"}>\n    <div className={\"sliders\"}>\n      <div className={\"slider1\"}>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        Split angle\n      </Typography>\n      <Slider\n        defaultValue={Math.PI/4}\n        onChange={(e,val) => {this.angle = val; this.forceUpdate()} }\n        aria-labelledby=\"continuous-slider\"\n        step={Math.PI/100}\n        marks={[{value:0, label: '0'},  {value:Math.PI/2, label: '90°'}, {value:Math.PI, label: '180°'}]}\n        min={0}\n        max={Math.PI}\n      />\n      </div>\n      <div className={\"slider2\"}>\n     <Typography id=\"discrete-slider\" gutterBottom>\n        Recursion depth\n      </Typography>\n      <Slider\n        defaultValue={8}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.depth = val; this.forceUpdate()} }\n        step={1}\n        //marks={[{value:0, label: '0'},  {value:5, label: '5'}, {value:10, label: '10'}, {value:15, label: '15'}]}\n        min={1}\n        max={15}\n      />\n      </div>\n      <div className={\"slider3\"}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Base length\n      </Typography>\n      <Slider\n        defaultValue={130}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.length = val; this.forceUpdate()} }\n        step={5}\n        //marks={[{value:50, label: '50'}, {value:200, label: '200'}, {value:400, label: '400'}]}\n        min={50}\n        max={400}\n      />\n      </div>\n      <div className={\"slider4\"}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Flower radius\n      </Typography>\n      <Slider\n        defaultValue={4}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        onChange={(e,val) => {this.flowerSize = val; this.forceUpdate()} }\n        step={1}\n        marks\n        min={0}\n        max={20}\n      />\n      </div>\n      <div className={\"colorpicker1\"}>\n      <Typography id=\"colorpicker\" gutterBottom>\n        Flower color\n      </Typography>\n      <ColorPicker\n        defaultValue={this.flowerColor}\n        TextFieldProps={{ value: this.flowerColor }}\n        value={this.flowerColor}\n        onChange={(color) => {this.flowerColor = color; this.forceUpdate()}}\n      />\n      </div>\n      <div className={\"colorpicker2\"}>\n      <Typography id=\"colorpicker\" gutterBottom>\n        Line Color\n      </Typography>\n      <ColorPicker\n        defaultValue={this.lineColor}\n        TextFieldProps={{ value: this.lineColor }}\n        value={this.lineColor}\n        onChange={(color) => {this.lineColor = color; this.forceUpdate()}}\n      />\n      </div>\n    </div>\n    <div className=\"canvas\" >\n      <Canvas angle={this.angle} depth={this.depth} length={this.length}\n              flowerSize={this.flowerSize} flowerColor={this.flowerColor} lineColor={this.lineColor}>\n      </Canvas>\n    </div>\n    </div>)\n  }\n}\n\n\nexport default InputSlider","import { Input } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Canvas from './App';\nimport InputSlider from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <InputSlider />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}